{"version":3,"file":"component---src-pages-using-typescript-tsx-70d0d66c0448914def9d.js","mappings":"sLA8CA,UAjCwD,SAAC,GAAD,IACtDA,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,SAFsD,OAItDC,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAACE,EAAAA,EAAD,CAAKC,MAAM,qBACXH,EAAAA,cAAAA,KAAAA,KAAAA,mBACkBA,EAAAA,cAAAA,IAAAA,KAAAA,0BAElBA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,OAAAA,KAAAA,YAD3C,0CAE8BA,EAAAA,cAAAA,OAAAA,KAAAA,YAF9B,qCAGUA,EAAAA,cAAAA,OAAAA,KAAAA,oBAHV,MAKAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,OAAAA,KAAAA,cAD3C,oBAEUA,EAAAA,cAAAA,OAAAA,KAAAA,cAFV,gBAE8CA,EAAAA,cAAAA,OAAAA,KAAAA,YAF9C,UAIAA,EAAAA,cAAAA,IAAAA,KAAAA,gCAC+BA,EAAAA,cAAAA,OAAAA,KAAOD,EAASK,UAD/C,uBAEYN,EAAKO,KAAKC,UAFtB,KAIAN,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGO,KAAK,6CAAR,kCAFF,KAOAP,EAAAA,cAACQ,EAAAA,GAAD,CAAMC,GAAG,KAAT,8B,uDCUJ,IAtCe,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACVZ,GAAOa,EAAAA,EAAAA,IAAe,cAU5B,OACE,gCACE,gBAAC,IAAD,CAAQC,WAAW,UAAAd,EAAKO,KAAKQ,oBAAV,eAAwBV,QAAxB,UACnB,uBACEW,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAOP,GACP,0BACEI,MAAO,CACLI,UAAU,iBACVC,SAAS","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/Layout.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header\"\nimport \"./layout.scss\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"names":["data","location","React","Layout","Seo","title","pathname","site","buildTime","href","Link","to","children","useStaticQuery","siteTitle","siteMetadata","style","margin","maxWidth","padding","marginTop","fontSize"],"sourceRoot":""}