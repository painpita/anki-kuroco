{"version":3,"file":"component---src-pages-using-ssr-js-984ec622d7ffa11f9a5c.js","mappings":"uKAoDA,IAtCe,SAAC,GAAkB,IAAD,EAAfA,EAAe,EAAfA,SACVC,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACE,gCACE,gBAAC,IAAD,CAAQC,WAAW,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAOV,GACP,0BACEO,MAAO,CACLI,UAAU,iBACVC,SAAS,wB,uECJrB,UA7BiB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAClB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKP,MAAM,cACX,0CACe,kDAEf,4IAE+C,IAC7C,qEAHF,KAKA,uBACEC,MAAO,CAAEO,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKJ,EAAWK,UAElB,2DACkC,IAChC,qBAAGC,KAAK,oFAAR,6CAFF,KAOA,gBAAC,KAAD,CAAMC,GAAG,KAAT","sources":["webpack://gatsby-starter-default/./src/components/Layout.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header\"\nimport \"./layout.scss\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <Seo title=\"Using SSR\" />\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["children","data","useStaticQuery","siteTitle","site","siteMetadata","title","style","margin","maxWidth","padding","marginTop","fontSize","serverData","width","borderRadius","alt","src","message","href","to"],"sourceRoot":""}